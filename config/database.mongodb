/**
 * ! CREATING DATABASE "db_campus_incidencias"
 */
use("db_campus_incidencias");
db.createCollection("counters");
db.counters.insertMany([
    { id: "trainerId", sequence_value: 0 },
    { id: "incidenciaId", sequence_value: 0 }
]);

function siguienteId(coleccion) {
    const sequenceDocument = db.counters.findOneAndUpdate(
        { id: `${coleccion}Id` },
        { $inc: { sequence_value: 1 } },
        { returnDocument: "after" }
    );
    return sequenceDocument.sequence_value;
};

use("db_campus_incidencias");
db.createCollection("trainer", {
    capped: true,
    size: 5000,
    max: 15,
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            additionalProperties: false,
            required: ['_id', 'id', 'nombre', 'email_personal', 'telefono_movil'],
            properties: {
                _id: {
                    bsonType: 'objectId'
                },
                id: {
                    bsonType: "int"
                },
                nombre: {
                    bsonType: 'string',
                    description: `El parametro nombre es obligatorio y debe ser un string.`
                },
                email_personal: {
                    bsonType: 'string',
                    description: `El parametro email_personal es obligatorio y debe ser un string.`
                },
                email_corporativo: {
                    bsonType: 'string',
                    description: `El parametro email_corporativo es obligatorio y debe ser un string.`
                },
                telefono_movil: {
                    bsonType: 'string',
                    description: `El parametro telefono_movil es obligatorio y debe ser un string.`
                },
                telefono_residencia: {
                    bsonType: 'string',
                    description: `El parametro telefono_residencia es obligatorio y debe ser un string.`
                },
                telefono_empresa: {
                    bsonType: 'string',
                    description: `El parametro telefono_empresa es obligatorio y debe ser un string.`
                },
                telefono_movil_empresarial: {
                    bsonType: 'string',
                    description: `El parametro telefono_movil_empresarial es obligatorio y debe ser un string.`
                }
            }
        }
    }
});

use("db_campus_incidencias");
db.createCollection("incidencia", {
    capped: true,
    size: 5000,
    max: 15,
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            additionalProperties: false,
            required: ['_id', 'id', 'trainerId', 'categoria', 'tipo_incidencia', 'fecha_reporte', 'area_incidencia', 'equipo_averiado', 'codigo_equipo', 'descripcion'],
            properties: {
                _id: {
                    bsonType: 'objectId'
                },
                id: {
                    bsonType: "int"
                },
                trainerId: {
                    bsonType: 'int',
                    description: `El parametro trainerId es obligatorio y debe ser un int`
                },
                categoria: {
                    bsonType: 'string',
                    description: `El parametro categoria es obligatorio y debe ser un string.`,
                    enum: ["hardware", "software"]
                },
                tipo_incidencia: {
                    bsonType: 'string',
                    description: `El parametro tipo_incidencia es obligatorio y debe ser un string.`,
                    enum: ["leve", "moderada", "critica"]
                },
                fecha_reporte: {
                    bsonType: 'date',
                    description: `El parametro fecha_reporte es obligatorio y debe ser un string en formato YYYY-MM-DD.`
                },
                area_incidencia: {
                    bsonType: 'string',
                    description: `El parametro area_incidencia es obligatorio y debe ser un string.`,
                    enum: ["Apolo", "Artemis", "Sputnik", "Skylab", "Corvus", "Endor"]
                },
                equipo_averiado: {
                    bsonType: 'string',
                    description: `El parametro equipo_averiado es obligatorio y debe ser un string.`,
                    enum: ["pantalla", "mouse", "diadema", "teclado", "torre"]
                },
                color_equipo: {
                    bsonType: 'string',
                    description: `El parametro color_equipo debe ser un string.`
                },
                codigo_equipo: {
                    bsonType: 'string',
                    description: `El parametro codigo_equipo es obligatorio y debe ser un string.`
                },
                descripcion: {
                    bsonType: 'string',
                    description: `El parametro descripcion es obligatorio y debe ser un string.`
                }
            }
        }
    }
});



use("db_campus_incidencias");
db.trainer.insertMany([
    {
        id: Number(siguienteId("trainer")),
        nombre: "Miguel Castro",
        email_personal: "MiguelCas@gmail.com",
        email_corporativo: "MiguelCampus@outlook.com",
        telefono_movil: "+57 321 548 6549"
    },
    {
        id: Number(siguienteId("trainer")),
        nombre: "Carlos Rueda",
        email_personal: "CarlosRue@gmail.com",
        email_corporativo: "CarlosCampus@outlook.com",
        telefono_movil: "+57 311 485 6945"
    },
    {
        id: Number(siguienteId("trainer")),
        nombre: "Vermen",
        email_personal: "Vermen@gmail.com",
        email_corporativo: "VermenCampus@outlook.com",
        telefono_movil: "+57 389 455 4545"
    },
    {
        id: Number(siguienteId("trainer")),
        nombre: "Johlver",
        email_personal: "Johlver@gmail.com",
        email_corporativo: "JohlverCampus@outlook.com",
        telefono_movil: "+57 365 275 4585"
    }
]);

use("db_campus_incidencias");
db.incidencia.insertMany([
    {
        id: Number(siguienteId("incidencia")),
        trainerId: 1,
        categoria: "hardware",
        tipo_incidencia: "moderada",
        fecha_reporte: ISODate('2022-06-03'),
        area_incidencia: "Artemis",
        equipo_averiado: "pantalla",
        color_equipo: "negro",
        codigo_equipo: "Ads65752",
        descripcion: "Aparecen lineas moradas en la pantalla"
    },
    {
        id: Number(siguienteId("incidencia")),
        trainerId: 3,
        categoria: "software",
        tipo_incidencia: "leve",
        fecha_reporte: ISODate('2022-02-03'),
        area_incidencia: "Sputnik",
        equipo_averiado: "torre",
        color_equipo: "blanco",
        codigo_equipo: "qwas4789",
        descripcion: "Se sobre calienta la ram, hace que cargue lento"
    },
    {
        id: Number(siguienteId("incidencia")),
        trainerId: 3,
        categoria: "hardware",
        tipo_incidencia: "critica",
        fecha_reporte: ISODate('2022-08-03'),
        area_incidencia: "Apolo",
        equipo_averiado: "torre",
        color_equipo: "negro",
        codigo_equipo: "687sdfsd",
        descripcion: "Se quemo la tarjeta grafica"
    },
    {
        id: Number(siguienteId("incidencia")),
        trainerId: 4,
        categoria: "hardware",
        tipo_incidencia: "leve",
        fecha_reporte: ISODate('2022-04-03'),
        area_incidencia: "Corvus",
        equipo_averiado: "teclado",
        color_equipo: "negro",
        codigo_equipo: "23465423fdsaf",
        descripcion: "Se perdio la tecla 'M'"
    }
]);
